const { MongoClient, ObjectId } = require('mongodb');

const mongoUri = process.env.MONGODB_URI || 'mongodb://admin:password@localhost:27017/military-logistics?authSource=admin';

async function createMoreSupplyOutputs() {
  const client = new MongoClient(mongoUri);
  
  try {
    await client.connect();
    console.log('Connected to MongoDB');
    
    const db = client.db('military-logistics');
    
    // Get existing units and products
    const units = await db.collection('units').find({}).toArray();
    const products = await db.collection('products').find({}).toArray();
    const users = await db.collection('users').find({}).toArray();
    
    console.log(`Found ${units.length} units, ${products.length} products, ${users.length} users`);
    
    // Create supply outputs for more dates
    const outputDates = [
      '2025-06-30',
      '2025-07-01', 
      '2025-07-02',
      '2025-07-03',
      '2025-07-04',
      '2025-07-05',
    ];
    
    const newOutputs = [];
    
    for (const dateStr of outputDates) {
      const outputDate = new Date(dateStr + 'T10:00:00.000Z');
      
      // Create 8-12 outputs per day
      const outputsPerDay = Math.floor(Math.random() * 5) + 8;
      
      for (let i = 0; i < outputsPerDay; i++) {
        const randomUnit = units[Math.floor(Math.random() * units.length)];
        const randomProduct = products[Math.floor(Math.random() * products.length)];
        const randomUser = users[Math.floor(Math.random() * users.length)];
        
        const quantity = Math.floor(Math.random() * 30) + 5; // 5-35kg
        
        const output = {
          receivingUnit: randomUnit._id,
          productId: randomProduct._id,
          quantity: quantity,
          outputDate: outputDate,
          receiver: `Đại diện ${randomUnit.name}`,
          status: 'completed',
          note: `Xuất ${randomProduct.name} cho ${randomUnit.name} - Ngày ${dateStr}`,
          createdBy: randomUser._id,
          createdAt: outputDate,
          updatedAt: outputDate,
          metadata: {
            autoGenerated: true,
            sampleData: true,
            generatedDate: dateStr
          }
        };
        
        newOutputs.push(output);
      }
    }
    
    // Insert new outputs
    const result = await db.collection('supplyOutputs').insertMany(newOutputs);
    console.log(`✅ Created ${result.insertedCount} new supply outputs`);
    
    // Show summary
    const totalOutputs = await db.collection('supplyOutputs').countDocuments();
    console.log(`📊 Total supply outputs in database: ${totalOutputs}`);
    
    // Show by date
    const dateGroups = await db.collection('supplyOutputs').aggregate([
      {
        $group: {
          _id: {
            $dateToString: { format: "%Y-%m-%d", date: "$outputDate" }
          },
          count: { $sum: 1 },
          totalQuantity: { $sum: "$quantity" }
        }
      },
      { $sort: { "_id": 1 } }
    ]).toArray();
    
    console.log('\n📅 Supply outputs by date:');
    dateGroups.forEach(group => {
      console.log(`${group._id}: ${group.count} outputs, ${group.totalQuantity}kg total`);
    });
    
  } catch (error) {
    console.error('Error:', error);
  } finally {
    await client.close();
    console.log('\nDisconnected from MongoDB');
  }
}

createMoreSupplyOutputs().catch(console.error);
